package captainRelease

# This is the container package for the captain software.  It defines which
# packages packages should be used.  All of the versions should be
# explicitly given, and if a frozen version is not provided, "master"
# should be used it place of the version number.
#
# In all other packages, the used package version should not be specified.

# The basic support packages.  These are packages that define things like
# the compiler flags, but don't actually do any work.  This includes the
# packages needed to implement testing, but should not include any specific
# CAPTAIN testing implementations
use captainPolicy 1.1.0
use testBase 1.0.0

# The infrastructure packages needed to read and understand the data.
# These packages concentrate on event handling, but do not do any specific
# transformations to the events (e.g. no calibration)
use captEvent 1.0.0
use captTrans 0.0.0
use captDBI 0.0.0
use calibTables 0.0.0
use captChanInfo 0.0.0
use eventDisplay 0.0.0
use captControl 0.0.0

# The calibration packages.  These packages apply the actual hit
# calibrations and find the pulses inside of the TPC, PDS or muon
# telescope.  The pulse finding borders on reconstruction, but is different
# enough from track reconstruction that it gets called calibration.
use clusterCalib 0.0.0

# The TPC reconstruction packages
use captRecon 0.0.0

# The physics, detector and electronics simulations
use detSim 0.0.0
use elecSim 0.0.0
use captainGENIE 0.0.0

# The high level data processing packages.  These packages are not ready
# for a freeze, but are convenient to have available, so they are left at
# the "master" version.
use captSummary master
use captDST master

# Build methods to include.
document doxygen doxygen -group=documentation ../doc/*.dox

# Apply a check to warn if a development version is being used.
setup_script check_version
